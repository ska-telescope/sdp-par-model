image: "python:latest"

before_script:
  - python -V
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
      pytest pytest-xdist nbval pytest-cov pytest-rerunfailures

# Set up caching as suggested by GitLab's Python template
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
cache:
  paths: [.cache/pip,venv]

stages:
  - test
  - deploy

# Execute all available code. Most of our "tests" are actually the
# notebooks, so we use the nbval extension to pull them into py.test.
# This has the advantage that we can generate coverage statistics for
# the entire thing.
#
# Unfortunately, there currently seems to be some flakiness to this:
# Sometimes a notebook fails to start, reporting "RuntimeError: Kernel
# didn't respond in 60 seconds". There's open tickets on similar
# issues, so maybe this is going to away eventually. For the moment,
# simply retrying a couple of times seems to fix it. This likely means
# that we spin a bit if something goes wrong systematically, but
# better than dealing with random false positives...
test:
  stage: test
  tags: [sdp]
  script:
    - py.test --verbose --color=yes --junitxml=junit.xml
        --cov=sdp_par_model --cov-report=term --cov-report=html
        -n 4 --dist loadscope --nbval-lax --reruns 5
        iPython/SKA1_Export.ipynb
        iPython/SKA1_SDP_Products.ipynb
        iPython/SKA1_Imaging_Performance_Model.ipynb
        iPython/SKA1_SDP_DesignEquations.ipynb
        tests
  artifacts:
    paths: [htmlcov/, junit.xml]
    reports:
      junit: junit.xml

# Update Xray links in Jira
xray:
  stage: deploy
  tags: [ska]
  before_script: []
  cache: {}
  # only: [master] # Disabled for testing right now
  dependencies: [test]
  script:
    - 'curl -X POST --silent --show-error --fail
        -H "Content-Type: multipart/form-data"
        -H "Authorization: Basic $JIRA_AUTH"
        -F file=@junit.xml
        https://jira.skatelescope.org/rest/raven/1.0/import/execution/junit?testExecKey=XTP-39'
  retry: 2 # Sometimes JIRA doesn't cooperate right away

# Generate GitLab pages. This is done only for the master. On this
# occasion, we export:
#
# 1. The Sphinx documentation (root)
# 2. All the notebooks (note that this will re-run them)
# 3. Coverage reports
pages:
  stage: deploy
  tags: [sdp]
  only: [master]
  dependencies: [test] # For coverage
  script:
    # Make Sphinx documentation
    - pip install sphinx sphinx-rtd-theme
    - make -C docs html
    # Make notebooks
    - make -j 4 -k -C iPython notebooks_html
    # Copy all into "public"
    - cp -R docs/_build/html public
    - cp -R iPython/out public/iPython
    - cp -R htmlcov public
  artifacts:
    paths: [public/]
    expire_in: 1 week
