geometry : [ We = 7.27e-5 ];

uvsize : [ ThetaFOV = lambdamax / Ds * 2*(3.83/ %pi) * Qfov, ThetaPix = lambdamin / (Bmax * (2/3)) / 2 / QPix, NPix = ThetaFOV/ ThetaPix];

convksize : [ NGWfn (w, eta )  := 2 * sqrt (( ((w * ThetaFOV/2))**2 + (w * ThetaFOV/2 )/(3.14 *eta/sqrt(w))))  * ThetaFOV, DeltaWMax = (Bmax * We * Tsnap *Qw )/(2 * lambdamin)] ;

floprate : [ RFLOP= 2 * NMajor * 4 * Nbeam * Nf * (RGrid + RFFT + RRP + RCCF), RGrid = Na * (Na -1 )  /(2*TDump)  * (NGW**2  + NAA**2) * Nmm * 8, NGW = NGWfn(DeltaWMax, etaw ), RFFT = NPix**2 * log(NPix**2) / log(2) * 5 / Tsnap, RRP = NPix**2 / Tsnap * 50 , RCCF =  (2 *Na * (Na -1 ) ) * NCVFF ** 2 * log(NCVFF ** 2 ) / log(2) * Nmm * 5 / (TIon * QFCV), NCVFF = QGCF * sqrt( NGW**2 + NAA**2)];

workingmem : [ MUVGrid = 32 * NPix**2];


general : [ Ncrpd = Na * (Na -1 ) /2  * 4  * Nbeam * Nf, Rvis  = Ncrpd / TDump];


/* Some scenarios to run */
SKA1LowBaseline : [ TDump = 0.6, Na = 1024 , Nf= 256000, Nbeam=1, Ds=35, lambdamax = 3, lambdamin = 3, lambda = 3, NAA=9, QPix=2.5, Qfov=1.8,Nmm=2, Bmax=1e5, etaw=0.01, NMajor=10, QGCF=8, QFCV=10, TIon=60, Qw=1 ] ;
SKA1MidBaseline : [ TDump = 0.08, Na = 254 , Nf= 256000, Nbeam=1, Ds=15, lambdamax = 0.3, lambdamin = 0.3, lambda = 0.3, NAA=9, QPix=2.5, Qfov=1.8,Nmm=2, Bmax=2e5, etaw=0.01, NMajor=10, QGCF=8, QFCV=10, TIon=60 , Qw=1] ;
SKA1SurveyBaseline : [ TDump = 0.3, Na = 96 , Nf= 256000, Nbeam=36, Ds=15, lambdamax = 0.3, lambdamin = 0.3, lambda = 0.3, NAA=9, QPix=2.5, Qfov=1.8,Nmm=2, Bmax=0.5e5, etaw=0.01, NMajor=10, QGCF=8, QFCV=10, TIon=60 , Qw=1 ] ;


SKA1LowOld : [ TDump = 0.6, Na = 1024 , Nf= 256000, Nbeam=1, Ds=35, lambdamax = 3, lambdamin = 3, lambda = 3, NAA=9, QPix=1.5, Qfov=0.9,Nmm=1, Bmax=1e5, etaw=0.01, NMajor=10];

SKA1SurveyOld : [ TDump = 0.3, Na = 96 , Nf= 256000, Nbeam=36, Ds=15, lambdamax = 0.2, lambdamin = 0.2, lambda = 0.2, NAA=9, QPix=1.5, Qfov=0.8,Nmm=1, Bmax=0.5e5, etaw=0.01, NMajor=10, QGCF=8, QFCV=10, TIon=60 ] ;

TelRun(T) := block ( [s, xx1, muv], xx1: diff(ev(RFLOP, floprate, geometry, uvsize, convksize, workingmem, T,infeval), Tsnap), s: find_root (xx1, Tsnap, 10, 1000),  muv: float(ev(MUVGrid, uvsize, workingmem, T,infeval)), [RFLOP=float(ev(RFLOP, floprate, geometry, uvsize, convksize, T,infeval, Tsnap=s)), Tsnap =s, MUVGrid=muv ]);

/* Take a parameter list for a list and remove a parameter. Allows then easier differentiation etc. */
DeletePar(P, T) := delete( P= ''assoc(P, T), T);

/* Scales parameter and returns revised key outputs */
DiffPar(T, P, f) := TelRun ( append(DeletePar(P,T) , [P=assoc(P, T)*f]));


TelRun(SKA1LowBaseline);
TelRun(SKA1MidBaseline);
TelRun(SKA1SurveyBaseline);

DiffPar(SKA1LowBaseline, Bmax, 0.5);
DiffPar(SKA1MidBaseline, Bmax, 0.5);
DiffPar(SKA1SurveyBaseline, Bmax, 0.5);

DiffPar(SKA1LowBaseline, Qfov, 0.5);
DiffPar(SKA1MidBaseline, Qfov, 0.5);
DiffPar(SKA1SurveyBaseline, Qfov, 0.5);
